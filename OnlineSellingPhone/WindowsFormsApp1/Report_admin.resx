<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPrint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAGZSURBVFhHYxgFgxr0n/xRNOHkz9WUYJAZUONIB2BDTv38
        TxEGmgE1jnQw6oABdYCTk9P/8rl7sRtKAgaZATILaizxYEAckJSUZJeQkHAhMTHxDxD/pzIGmXkeaL4t
        1DpUkJycLARU8B5JA63wu6ioKEGotQgAlPBEU0hVLHi++L9fTRqM7wm1FgGAQROKrIHa2Lcm9X9cCoQN
        sgtqLQLQ2gHIeHA6IDQ0NCM8PPw/PTDILqi1CODu7p4Byq/0wCC7oNYiAFAiFF0hDTFmFIAEkRWZmJj8
        19PTowoGmYVsNhATdoCamtp/i+oN/52WfqUIg8wAmYVsNhATdoCtre3/iKal/5PnnqUIg8yws7NDthyE
        MR3g4OBgjaYIpTJqPvj1f8a6N0Rj9MoIGTs7O1tCrUUAe3t7FkdHx5PICpEdADJUsuwS0RiPA06A7IJa
        iwqAEjxABVVAhywH0qtqlp9+DDOIXAwyA2QWyEwgrgTZAbWOMEBuEZXu+PDfYdJ9vBikBtlyMKZWk2zA
        HUA2psQBA94xGQW0BwwMAOrj5gB5D1ssAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAIDSURBVFhH7ZfPSlVRFIcvaWgNzMqJr+CwN0iUoEGE0yx7
        AxuIkBGFSdbAgZEOxZGaA3sGHecDWDQJdZLWUCmovu90Nxyvu/vnnA2X4P7gQ113u886a+291rqVjv43
        9cAIvIJN2IFtWIfXMAwXIbkGYBa+we8GfIfncAWSaAyOITzgCDZgGibgITyu2vIOuu4OlNIjCBvuwX3o
        hn/Jz1zzEfyfX/ACCmsB3OQtXNLQpDwryxCcfwKFdAEG//5aSFMQImEq26I3oBMH0Kehka5Xf6bSZfgM
        OtHwPNyGD1DvoBXROIQodGmIqR/2wYVPNSRUL3gt3XtUQ0yr4AL5ATcgpayc7h29EYY+PDywC2XLqlf3
        ahXz775bOZtkJfML1DogZVMxBKcQ21tW4Ezoa/kJZVPhS8T29kBmEciH4z34oeEKtlYqYEym0XTWOmDa
        zyl4+y77K51MxQmEh2ehj+kWuMAr49VJqfByXnWvfFQWoENw4T0NCeXeFrlo6POaAx2wfJbNf62aKvM2
        DE+oTixqaIdsnbZQnbClFpWt3JZeSJZMHRCHC4eMZmXqlsCXcKgpLOtBiMQneAD1OqV33jnRtcH5SSgl
        B8vQycSp1zoxAw6kYSi12eSH0q9wF5LIg/kMmhnLnaAdy69BchnimzAPa+CXEnEkfwl+MWnlrHTUblUq
        fwCt56X3aA3V2AAAAABJRU5ErkJggg==
</value>
  </data>
</root>