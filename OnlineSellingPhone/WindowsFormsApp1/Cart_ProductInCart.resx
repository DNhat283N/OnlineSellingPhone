<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDelete.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAOWSURBVFhH7dZZT1pBFAdwP0Nr27c2uGBrBRFEQFBRRAFB
        cAEl6SdpUrfWJXVrbfp1mtTEpg9dP0AfarkL+3JNKyZ4Oud2WIR78aL0zX9iCBDvb+bMcGZabnKV5Lzh
        VsG3qM26Qp6se84tuIOarCNwm379f5LxPekg6GrOu/BNmApBzhOEnHsecq45yE7OQtY5CxnHzNe0w7+S
        GQ2003+7fgh672R68S2BzwTvAsji4zNkAAHIjPkhNeo7S9u9bwTLzF36mKvldyBsEabDHBkEKMXTo9OQ
        tvsgPeKF5JAnnhryDNPHNRYhsBgi+OlV8dTwFBAckoPu06TFFaSPVZasf2GwGXjK6iYDmISExZmPGZ3K
        KvFvzcN8s/CkZQISJickBsY5Vme7Qxn54IaTwrMEjznJBkNYBo8TmLO5IFmLQ9w4BnG9/YAy0sGfmtRu
        R5zxh0E4+gjc5h7ECVyNRwnOrr2E3OEHOB73k7JX4YZRiOlH8rzG1ka52gjexTWpsuPMERdTOAduax9i
        CFfg3Pqu+B0m9/4ImAHHBZzMHmK6EYhpbcuUq01uKvRdas2x7DjzIiAOgryPkfWuxqFQAGZ5E6JGRy3e
        OwS8xvqFchcjttc6Gw7LzlcO4vwc+O3XwL7YvvAZu7ELnAwe1dqA77GeH3ebb1G2nBNPUCeHFzcclp3b
        2CmDGIIWXy/Doz1W4B8PAq82aSlbDh4q9fDihsOyi7MuwphG8EdmiKrNLsqWk/EEXZfhpd1ePQASdmMP
        2H4CX4LzD03AdBknKVvOycRMr2K8Ys1LA8EqrO8A20fgOjjXNQB8l0FD2XLwPG8U53DWK1vks0LpM+b5
        NjAIy+Bsp1F6E2LwPJfCscNhkynhBMT3uOZYdma1YhDkNfJ0DViEq3Cu0whsR/8nytVGvExU4djbsb1i
        hysCRby44bDskaXN0iCy7w7hZ7dFCge2zfCMcrXBm0zK7stX4uKRSno7tlexw5EmI7Xbsew4c8R/kA7I
        SeL6PHdfq6KcdPAmU4mXj9QJsb3KdThccyw7zlwSb9dDRKXbp4x88BqVGpriZI5URb9zKZxR6VhGbWil
        TP0kh70W8SbTPPzPrwd6M328suA1KmF2njYFV+nm6WMbC4HN5I+7Ttkbnnl18BpF4AO8TCjGyW6PqPpe
        KV5zJcGbDF4m8Dyvg38m+NKlP7XrBlsp32XWsGqTm1X3u7G3y7bXm9RNS8tfbzfy/DR+NHMAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>